local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v82=0;local v83;while true do if (v82==0) then v83=v2(v0(v30,16));if v19 then local v100=0;local v101;while true do if (v100==1) then return v101;end if (v100==0) then v101=v5(v83,v19);v19=nil;v100=1;end end else return v83;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v84=0 -(0 -0) ;local v85;while true do if (v84==(0 -0)) then v85=(v31/((3 -1)^(v32-(2 -1))))%(((1686 -(68 + 997)) -(555 + (1334 -(226 + 1044))))^(((v33-(932 -(857 + 74))) -(v32-(569 -(367 + 201)))) + (928 -(214 + 713)))) ;return v85-(v85%1) ;end end else local v86=0;local v87;while true do if (v86==(0 + 0)) then v87=(1 + 1)^(v32-(878 -(282 + 595))) ;return (((v31%(v87 + v87))>=v87) and (1638 -(1523 + 114))) or (0 + 0) ;end end end end local function v21() local v34=0 -0 ;local v35;while true do if ((118 -(32 + (155 -70)))==v34) then return v35;end if (v34==0) then v35=v1(v16,v18,v18);v18=v18 + (2 -1) ;v34=1 + 0 ;end end end local function v22() local v36,v37=v1(v16,v18,v18 + (352 -(87 + 263)) );v18=v18 + 2 ;return (v37 * (436 -(67 + 113))) + v36 ;end local function v23() local v38=0 + 0 ;local v39;local v40;local v41;local v42;while true do if (v38==(2 -1)) then return (v42 * 16777216) + (v41 * (48199 + 17337)) + (v40 * (1017 -761)) + v39 ;end if (v38==(952 -(802 + 150))) then v39,v40,v41,v42=v1(v16,v18,v18 + (7 -4) );v18=v18 + (6 -2) ;v38=1 + 0 ;end end end local function v24() local v43=997 -(915 + 82) ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==1) then v46=(7 -5) -1 ;v47=(v20(v45,1 + 0 ,26 -6 ) * (((4222 -3033) -(1069 + 118))^(72 -40))) + v44 ;v43=2;end if ((3 -1)==v43) then v48=v20(v45,4 + (876 -(814 + 45)) ,54 -23 );v49=((v20(v45,32)==(1 + 0)) and  -(792 -(368 + 423))) or (3 -2) ;v43=(51 -30) -(1 + 9 + 8) ;end if (v43==(0 -(0 + 0))) then v44=v23();v45=v23();v43=443 -(416 + 26) ;end if (v43==(9 -6)) then if (v48==(0 + 0)) then if (v47==(0 -0)) then return v49 * 0 ;else local v102=438 -(145 + 293) ;while true do if (v102==(430 -(44 + 386))) then v48=(2372 -(261 + 624)) -(998 + 488) ;v46=0 + 0 ;break;end end end elseif (v48==(1677 + 370)) then return ((v47==(772 -(201 + (1014 -443)))) and (v49 * (1/(1138 -((1196 -(1020 + 60)) + 1022))))) or (v49 * NaN) ;end return v8(v49,v48-(4258 -3235) ) * (v46 + (v47/((2 + 0)^52))) ;end end end local function v25(v50) local v51=1423 -((1724 -1094) + 793) ;local v52;local v53;while true do if (v51==(9 -6)) then return v6(v53);end if ((4 -3)==v51) then v52=v3(v16,v18,(v18 + v50) -(1 + 0) );v18=v18 + v50 ;v51=1819 -(1703 + 114) ;end if (v51==(2 + 0)) then v53={};for v90=3 -2 , #v52 do v53[v90]=v2(v1(v3(v52,v90,v90)));end v51=1750 -(760 + (1688 -(376 + 325))) ;end if ((1913 -(1789 + 124))==v51) then v52=nil;if  not v50 then v50=v23();if (v50==(766 -(745 + 21))) then return "";end end v51=1414 -(447 + 966) ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;while true do local v67=1941 -(550 + 1391) ;while true do if ((1 -0)==v67) then if (v54==(1 -0)) then v59=v23();v60={};for v103=1785 -(599 + 1185) ,v59 do local v104=0 + 0 ;local v105;local v106;local v107;while true do if (v104==(1 + 0)) then v107=nil;while true do if (v105==0) then local v114=0;local v115;while true do if (0~=v114) then else v115=0;while true do if (v115==(575 -(507 + 67))) then v105=1750 -(1013 + 736) ;break;end if (v115~=0) then else v106=v21();v107=nil;v115=1;end end break;end end end if (1==v105) then if (v106==(1 + 0)) then v107=v21()~=0 ;elseif (v106==(4 -2)) then v107=v24();elseif (v106~=3) then else v107=v25();end v60[v103]=v107;break;end end break;end if (v104~=0) then else v105=0 -0 ;v106=nil;v104=868 -(550 + 317) ;end end end v58[3 -0 ]=v21();v54=2;end break;end if (v67~=(0 -0)) then else local v92=0 -0 ;while true do if (v92~=(285 -(134 + 151))) then else if (0==v54) then local v108=0;while true do if (v108==(1665 -(970 + 695))) then v55={};v56={};v108=1;end if (v108==(1 -0)) then v57={};v58={v55,v56,nil,v57};v108=2;end if (v108~=2) then else v54=3 -2 ;break;end end end if (v54==(1826 -(1195 + 629))) then for v109=1,v23() do local v110=0 -0 ;local v111;while true do if ((241 -(187 + 54))~=v110) then else v111=v21();if (v20(v111,1,781 -(162 + 618) )==(0 + 0)) then local v117=0;local v118;local v119;local v120;while true do if (v117==(2 + 0)) then if (v20(v119,1,1 -0 )==(1 -0)) then v120[1 + 1 ]=v60[v120[2]];end if (v20(v119,1638 -(1373 + 263) ,1002 -(451 + 549) )==(1 + 0)) then v120[3]=v60[v120[4 -1 ]];end v117=3;end if (v117==(0 -0)) then local v234=1384 -(746 + 638) ;while true do if (v234==(1 + 0)) then v117=1;break;end if ((0 -0)==v234) then v118=v20(v111,2,344 -(218 + 123) );v119=v20(v111,1585 -(1535 + 46) ,6);v234=1 + 0 ;end end end if (v117==1) then local v235=0;while true do if (v235~=1) then else v117=2;break;end if (0==v235) then v120={v22(),v22(),nil,nil};if (v118==(560 -(306 + 254))) then local v330=0;local v331;while true do if (0==v330) then v331=0;while true do if (v331==(0 + 0)) then v120[5 -2 ]=v22();v120[4]=v22();break;end end break;end end elseif (v118==1) then v120[3]=v23();elseif (v118==(1469 -(899 + 568))) then v120[2 + 1 ]=v23() -((4 -2)^(619 -(268 + 335))) ;elseif (v118~=3) then else local v360=290 -(60 + 230) ;local v361;while true do if (v360==0) then v361=572 -(426 + 146) ;while true do if (v361==0) then v120[1 + 2 ]=v23() -(2^(1472 -(282 + 1174))) ;v120[815 -(569 + 242) ]=v22();break;end end break;end end end v235=1;end end end if (v117==3) then if (v20(v119,8 -5 ,1 + 2 )~=1) then else v120[4]=v60[v120[1028 -(706 + 318) ]];end v55[v109]=v120;break;end end end break;end end end for v112=1252 -(721 + 530) ,v23() do v56[v112-(1272 -(945 + 326)) ]=v28();end return v58;end v92=1;end if (v92==(2 -1)) then v67=1;break;end end end end end end local function v29(v61,v62,v63) local v64=v61[1];local v65=v61[2];local v66=v61[3];return function(...) local v68=v64;local v69=v65;local v70=v66;local v71=v27;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v88=0,v76 do if (v88>=v70) then v74[v88-v70 ]=v75[v88 + 1 ];else v78[v88]=v75[v88 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do local v89=0;while true do if (v89==1) then if (v81<=31) then if (v81<=15) then if (v81<=7) then if (v81<=3) then if (v81<=1) then if (v81>0) then local v121=v80[2];v78[v121](v78[v121 + 1 ]);else local v122=0;local v123;while true do if (0==v122) then v123=v80[2];do return v13(v78,v123,v73);end break;end end end elseif (v81>2) then local v124=0;local v125;while true do if (0==v124) then v125=v80[2];v78[v125]=v78[v125](v13(v78,v125 + 1 ,v73));break;end end else v78[v80[2]]=v80[3];end elseif (v81<=5) then if (v81==4) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else local v128=0;local v129;local v130;local v131;local v132;while true do if (2==v128) then for v305=v129,v73 do v132=v132 + 1 ;v78[v305]=v130[v132];end break;end if (v128==1) then v73=(v131 + v129) -1 ;v132=0;v128=2;end if (v128==0) then v129=v80[2];v130,v131=v71(v78[v129](v13(v78,v129 + 1 ,v80[3])));v128=1;end end end elseif (v81>6) then v78[v80[2]]={};elseif (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=11) then if (v81<=9) then if (v81>8) then local v134=v80[2];v78[v134]=v78[v134](v78[v134 + 1 ]);else v78[v80[2]]=v78[v80[3]][v80[4]];end elseif (v81==10) then v78[v80[2]]=v78[v80[3]][v80[4]];else v78[v80[2]]={};end elseif (v81<=13) then if (v81==12) then for v237=v80[2],v80[3] do v78[v237]=nil;end else v78[v80[2]]=v63[v80[3]];end elseif (v81>14) then v78[v80[2]]=v78[v80[3]];else local v145=v80[2];local v146={v78[v145](v78[v145 + 1 ])};local v147=0;for v239=v145,v80[4] do local v240=0;while true do if (v240==0) then v147=v147 + 1 ;v78[v239]=v146[v147];break;end end end end elseif (v81<=23) then if (v81<=19) then if (v81<=17) then if (v81==16) then do return v78[v80[2]];end else do return;end end elseif (v81==18) then local v148=v80[2];v78[v148](v13(v78,v148 + 1 ,v80[3]));else local v149=v80[2];do return v13(v78,v149,v149 + v80[3] );end end elseif (v81<=21) then if (v81>20) then local v150=v80[3];local v151=v78[v150];for v241=v150 + 1 ,v80[4] do v151=v151   .. v78[v241] ;end v78[v80[2]]=v151;else v78[v80[2]]=v62[v80[3]];end elseif (v81>22) then do return v78[v80[2]]();end else local v155=0;local v156;while true do if (v155==0) then v156=v80[2];v78[v156]=v78[v156](v13(v78,v156 + 1 ,v73));break;end end end elseif (v81<=27) then if (v81<=25) then if (v81==24) then v78[v80[2]]=v63[v80[3]];elseif v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==26) then do return;end else local v159=v80[2];local v160=v80[4];local v161=v159 + 2 ;local v162={v78[v159](v78[v159 + 1 ],v78[v161])};for v242=1,v160 do v78[v161 + v242 ]=v162[v242];end local v163=v162[1];if v163 then v78[v161]=v163;v72=v80[3];else v72=v72 + 1 ;end end elseif (v81<=29) then if (v81>28) then v78[v80[2]]=v80[3]~=0 ;else v78[v80[2]]=v78[v80[3]];end elseif (v81>30) then local v167=0;local v168;while true do if (v167==0) then v168=v80[2];v78[v168]=v78[v168]();break;end end elseif (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=47) then if (v81<=39) then if (v81<=35) then if (v81<=33) then if (v81==32) then local v169=0;local v170;while true do if (0==v169) then v170=v80[2];do return v13(v78,v170,v73);end break;end end else v78[v80[2]][v78[v80[3]]]=v78[v80[4]];end elseif (v81==34) then v78[v80[2]]=v80[3]~=0 ;else v72=v80[3];end elseif (v81<=37) then if (v81==36) then local v175=v80[2];v78[v175]=v78[v175]();else do return v78[v80[2]];end end elseif (v81>38) then for v245=v80[2],v80[3] do v78[v245]=nil;end else v78[v80[2]]=v80[3];end elseif (v81<=43) then if (v81<=41) then if (v81>40) then local v179=v69[v80[3]];local v180;local v181={};v180=v10({},{__index=function(v247,v248) local v249=v181[v248];return v249[1][v249[2]];end,__newindex=function(v250,v251,v252) local v253=0;local v254;while true do if (v253==0) then v254=v181[v251];v254[1][v254[2]]=v252;break;end end end});for v255=1,v80[4] do v72=v72 + 1 ;local v256=v68[v72];if (v256[1]==28) then v181[v255-1 ]={v78,v256[3]};else v181[v255-1 ]={v62,v256[3]};end v77[ #v77 + 1 ]=v181;end v78[v80[2]]=v29(v179,v180,v63);else local v183=v80[2];local v184=v80[4];local v185=v183 + 2 ;local v186={v78[v183](v78[v183 + 1 ],v78[v185])};for v258=1,v184 do v78[v185 + v258 ]=v186[v258];end local v187=v186[1];if v187 then v78[v185]=v187;v72=v80[3];else v72=v72 + 1 ;end end elseif (v81==42) then v72=v80[3];else v78[v80[2]][v80[3]]=v80[4];end elseif (v81<=45) then if (v81==44) then v78[v80[2]]=v62[v80[3]];else local v193=v80[3];local v194=v78[v193];for v261=v193 + 1 ,v80[4] do v194=v194   .. v78[v261] ;end v78[v80[2]]=v194;end elseif (v81==46) then v78[v80[2]][v78[v80[3]]]=v78[v80[4]];else local v198=0;local v199;while true do if (v198==0) then v199=v80[2];v78[v199]=v78[v199](v78[v199 + 1 ]);break;end end end elseif (v81<=55) then if (v81<=51) then if (v81<=49) then if (v81>48) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end else local v200=v80[2];local v201=v78[v80[3]];v78[v200 + 1 ]=v201;v78[v200]=v201[v80[4]];end elseif (v81>50) then local v205=v80[2];local v206=v78[v80[3]];v78[v205 + 1 ]=v206;v78[v205]=v206[v80[4]];elseif (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=53) then if (v81>52) then local v210=v80[2];local v211,v212=v71(v78[v210](v13(v78,v210 + 1 ,v80[3])));v73=(v212 + v210) -1 ;local v213=0;for v262=v210,v73 do local v263=0;while true do if (0==v263) then v213=v213 + 1 ;v78[v262]=v211[v213];break;end end end else local v214=0;local v215;local v216;local v217;while true do if (v214==0) then v215=v69[v80[3]];v216=nil;v214=1;end if (v214==2) then for v314=1,v80[4] do local v315=0;local v316;while true do if (v315==0) then v72=v72 + 1 ;v316=v68[v72];v315=1;end if (v315==1) then if (v316[1]==28) then v217[v314-1 ]={v78,v316[3]};else v217[v314-1 ]={v62,v316[3]};end v77[ #v77 + 1 ]=v217;break;end end end v78[v80[2]]=v29(v215,v216,v63);break;end if (v214==1) then v217={};v216=v10({},{__index=function(v317,v318) local v319=v217[v318];return v319[1][v319[2]];end,__newindex=function(v320,v321,v322) local v323=0;local v324;while true do if (v323==0) then v324=v217[v321];v324[1][v324[2]]=v322;break;end end end});v214=2;end end end elseif (v81==54) then v78[v80[2]]();else v78[v80[2]][v80[3]]=v78[v80[4]];end elseif (v81<=59) then if (v81<=57) then if (v81==56) then local v220=0;local v221;while true do if (v220==0) then v221=v80[2];v78[v221](v13(v78,v221 + 1 ,v80[3]));break;end end else local v222=0;local v223;local v224;while true do if (v222==1) then for v325=1, #v77 do local v326=0;local v327;while true do if (v326==0) then v327=v77[v325];for v344=0, #v327 do local v345=0;local v346;local v347;local v348;while true do if (v345==0) then v346=v327[v344];v347=v346[1];v345=1;end if (v345==1) then v348=v346[2];if ((v347==v78) and (v348>=v223)) then local v363=0;while true do if (v363==0) then v224[v348]=v347[v348];v346[1]=v224;break;end end end break;end end end break;end end end break;end if (v222==0) then v223=v80[2];v224={};v222=1;end end end elseif (v81==58) then local v225=0;local v226;while true do if (0==v225) then v226=v80[2];v78[v226](v78[v226 + 1 ]);break;end end else local v227=v80[2];local v228={v78[v227](v78[v227 + 1 ])};local v229=0;for v264=v227,v80[4] do local v265=0;while true do if (v265==0) then v229=v229 + 1 ;v78[v264]=v228[v229];break;end end end end elseif (v81<=61) then if (v81>60) then v78[v80[2]][v80[3]]=v78[v80[4]];else do return v78[v80[2]]();end end elseif (v81<=62) then v78[v80[2]][v80[3]]=v80[4];elseif (v81>63) then local v276=v80[2];local v277={};for v302=1, #v77 do local v303=0;local v304;while true do if (v303==0) then v304=v77[v302];for v338=0, #v304 do local v339=0;local v340;local v341;local v342;while true do if (v339==0) then v340=v304[v338];v341=v340[1];v339=1;end if (v339==1) then v342=v340[2];if ((v341==v78) and (v342>=v276)) then local v362=0;while true do if (v362==0) then v277[v342]=v341[v342];v340[1]=v277;break;end end end break;end end end break;end end end else v78[v80[2]]();end v72=v72 + 1 ;break;end if (v89==0) then v80=v68[v72];v81=v80[1];v89=1;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
